YUI.add("person-contacts-count-models",(function(t){function e(t){e.superclass.constructor.call(this,t)}t.Models[this.name]=e,t.extend(e,t.FlickrModelRegistry,{name:this.name,remote:{read:function(e){return t.ModelFetchers["flickr-people-contacts-getInfo"].run(e,this.appContext)}},attributes:{followerCount:{defaultFn:function(){return 0}},followingCount:{defaultFn:function(){return 0}},pathAlias:{validator:function(e,r){return t.AttributeHelpers.validateString(e)},setter:function(e){return t.AttributeHelpers.coerceString(e)||void 0}}}})}),"@VERSION@",{requires:["flickr-model-registry","flickr-people-contacts-getInfo-fetcher","attribute-helpers"]});YUI.add("flickr-people-contacts-getInfo-fetcher",(function(e,t){"use strict";e.namespace("ModelFetchers")["flickr-people-contacts-getInfo"]={run:function(r,s){var o=this;return new e.FlickrPromise({apiResponse:s.callAPI("flickr.people.getInfo",this._processParams(r)),personContactsModelRegistry:s.getModelRegistry("person-contacts-count-models")}).then((function(e){return o._processResponse(e,r)}),e.FetcherErrorLogger(t))},_processParams:function(e){var t={datecreate:1,extras:"rev_contacts, contacts"};if(e.extras&&"string"==typeof e.extras&&e.extras.length>0&&(t.extras=t.extras+","+e.extras),e.id)t.user_id=e.id;else{if(!e.pathAlias)throw new Error("`fetch` is missing required params.");t.url=e.pathAlias}return t},_processResponse:function(e){var t=e.apiResponse,r=e.personContactsModelRegistry,s=t.person,o=s.id;return r.addOrUpdate({id:o,followerCount:s.revContacts&&parseInt(s.revContacts._content,10),followingCount:parseInt(s.contacts,10),pathAlias:s.pathAlias}),s}}}),"@VERSION@",{requires:["flickr-promise"],optional:["person-contacts-count-models","api-helper"]});